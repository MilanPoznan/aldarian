/* The overall container is positioned relative so that the hero image (absolutely positioned) is contained */
.hero-grid-container {
  position: relative;
  padding: 20px;
}

/* ----------------------------- */
/* HERO IMAGE STYLES             */
/* ----------------------------- */
/* The hero image starts full width and tall. It is absolutely positioned so we can freely animate its size and position. */
.hero-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 600px;
  object-fit: cover;
  z-index: 10;
}

/* ----------------------------- */
/* GRID CONTAINER & ITEM STYLES  */
/* ----------------------------- */
/* The grid container uses CSS grid.
   Since the hero image is absolutely positioned, we add top padding so that the grid items appear below it initially. */
.grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 16px;
  padding-top: 620px;
  /* Adjust to create space below the hero image */
}

/* Grid items start hidden (opacity 0) so they can animate in */
.grid-item {
  background: #f0f0f0;
  overflow: hidden;
  opacity: 0;
}

/* Grid images (for non-placeholder cells) take full width */
.grid-item img {
  width: 100%;
  display: block;
}

/* ----------------------------- */
/* HERO PLACEHOLDER STYLES       */
/* ----------------------------- */
/* This cell marks where (and how big) the hero image should be at the end of the scroll transition.
   For example, here we set it to 300px x 200px. */
.hero-placeholder {
  width: 300px;
  height: 200px;
  opacity: 1;
  /* visible so that the layout remains consistent */
  background: #ccc;
  /* Optional: a background color to help visualize the placeholder */
}